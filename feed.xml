<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[r7kamura/diary]]></title><description><![CDATA[r7kamura's daily working log.]]></description><link>https://r7kamura.github.io/diary/</link><generator>r7kamura/diary</generator><lastBuildDate>Tue, 07 Jun 2022 05:24:57 GMT</lastBuildDate><atom:link href="https://r7kamura.github.io/diary/feed.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[2022-06-06]]></title><description><![CDATA[r7kamura's working log on 2022-06-06]]></description><link>https://r7kamura.github.io/diary/articles/31</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/31</guid><pubDate>Sun, 05 Jun 2022 21:15:32 GMT</pubDate><content:encoded><![CDATA[<hr><p>GitHubの検索機能がおかしく、変なものがヒットしてしまい、<code>gh-diary</code> が意図通り動かなかった。</p>
<pre><code>$ gh issue list --search "'2022-06-06' in:title"

Showing 5 of 5 issues in r7kamura/diary that match your search

#30  2022-06-05    about 9 hours ago
#29  2022-06-04    about 1 day ago
#28  2022-06-03    about 2 days ago
#27  2022-06-02    about 3 days ago
#26  2022-06-01    about 4 days ago
</code></pre>
<p>今回このIssueは初めて手動でつくった。</p><hr><p>RedditとStackOverflowの投稿を見つけた。StackOverflowの方に、無理です……と回答しておいた。「いや出来ますよ？」という回答が来ると恥ずかしいかもしれないが、それはそれで答えが知れて嬉しいし、無理だと信じている者が1人居る、という情報を残しておくことできっと誰かの役に立つだろう。</p>
<ul>
<li><a href="https://www.reddit.com/r/github/comments/q1a98l/how_to_search_github_issue_by_exact_match/">How to search GitHub issue by EXACT match? : github</a></li>
<li><a href="https://stackoverflow.com/questions/64173152/how-search-github-issue-by-exact-match-like-double-quotes-for-google/72511254#72511254">How search github issue by EXACT match (like Double Quotes for Google) - Stack Overflow</a></li>
</ul><hr><p>二重引用符だといけると何人かから教えてもらった。動く方法が分かって良かった。gh-diaryも二重引用符を使うように修正しておいた</p>
<ul>
<li><a href="https://github.com/r7kamura/gh-diary/pull/5">r7kamura/gh-diary#5</a></li>
</ul><hr><p>iPhoneで配信するとたまに画面が暗くなる問題があり、画面が写り込んでいることと、iVCamが自動で何かやることが悪い影響を及ぼしているのではないか、と考えている。たしかに自動調整が有効化されている項目が何個かあったので、PC側でも、iPhone側でも無効化してみた。</p><hr><p>WSL2のdevcaontainerで <code>git pull</code> したら完全に停止して困っていた問題、ホスト側の .bashrc に</p>
<pre><code>eval "$(ssh-agent)"
</code></pre>
<p>を追加したら解決した。これはログイン時にのみ実行すればいいと思うので、多分 .bash_profile で良い。</p>
<hr>
<p>デバッグの過程として、まず</p>
<pre><code>ssh -T git@github.com
</code></pre>
<p>でも再現することを確認し、次に</p>
<pre><code>ssh-add -l
</code></pre>
<p>でも再現することを確認した。この状態で、ホスト側で起動したシェルで適当に</p>
<pre><code>eval "$(ssh-agent)"
</code></pre>
<p>を実行。これ自体では解決はしないのだけど、<code>ssh-agent</code> がホスト側で問題無く実行できるということはこれで確かめられる。</p>
<p>その後、冒頭のように .bashrc にこれを記述してから試してみると、問題が解消された。</p>
<p>最初、次のページを見たときは「<code>git pull</code> で問題が出る点は似ているが、permission deniedと表示される訳ではないから違うのかも」と思っていたが、解決してから振り返ると、問題としては同じものだったようだ。</p>
<ul>
<li><a href="https://stackoverflow.com/questions/67178239/ssh-forwarding-using-wsl2-and-vs-code-containers-on-windows">docker - SSH forwarding using WSL2 and VS code containers on Windows - Stack Overflow</a></li>
</ul>
<blockquote>
<p>To get VS Code to use your SSH keys from your WSL2 instance inside a Docker container running on the WSL2 backend, you need to tell WSL2 to create an ssh-agent at startup, and add your ssh key to the agent. When VS Code attaches to a container running on the WSL2 backend, it will automatically pick up the running ssh-agent, and allow you to authenticate with your WSL2 SSH keys inside your container.</p>
</blockquote>
<p>という情報が明示されていて良かった。</p>
<p>それから、シェルを起動するたびにいちいち <code>ssh-agent</code> を起動していは無数に <code>ssh-agent</code> が起動してしまうことになるし、何よりそのたびに <code>ssh-add</code> を実行しなければいけず、SSH鍵にパスフレーズを付けている場合にこれは非常に手間である。そこで、keychainを導入してシェルスクリプトを生成し、このシェルスクリプトをシェル起動時に読み込ませることにした。</p>
<ul>
<li><a href="https://zenn.dev/kaityo256/articles/ssh_agent_on_wsl">WSL2のUbuntuでkeychain経由でssh-agentを使う</a></li>
</ul><hr><p><img src="https://user-images.githubusercontent.com/111689/172076978-b6803aa1-37d3-45d6-b9e8-d18a1cfc928b.png" alt="image"></p>
<p>Google IMEの他にデフォルトのMicrosoft IMEが存在していて、たまにこれに切り替わったり、Windows + Spaceを間違って押したときに切り替わってしまったりと、たいへん不便だった。言語の設定 > 日本語 > オプション > キーボード からMicrosoft IMEを取り除くことで、この問題が解消された。削除と言うと怖い響きだが、これは簡単に元に戻せるらしい。また、WindowsアップデートなどでMicrosoft IMEが勝手に追加される場合もあるので、このときは同様の処理を行わなければならない。</p><hr><p>devcontainerで使うためのinstall.shでは、sudoを付けていると動かない、ということが分かった。</p>
<p>なんかことあるごとに "dotfiles.repository": "r7kamura/dotfiles" の設定がリセットされるのだけど、常にこの設定を使うようにVSCodeのユーザー設定に伝える方法はないのだろうか。設定画面にGUIで項目はないものの、普通にJSONにこれを書き込めば意図通り動くのか? とりあえず足してみた。</p><hr><p>ホストの ~/.config/gh/hosts.yml にghの認証情報が含まれているのだけど、コンテナでghコマンドを使うために、これをコンテナでも再利用したい。Dockerのマウント時にこれを指定すれば良いような気がするが、dotfilesでghを使うという話だから、これはリポジトリ固有の話ではないし、しかしinstall.shはコンテナの中で実行されると思うので上手く動かなさそうだし、どうしたものか</p>
<ul>
<li><a href="https://code.visualstudio.com/remote/advancedcontainers/add-local-file-mount">Add local file mount to a container</a></li>
</ul><hr><p>git credentials helperがローカルのOSにインストールされている場合はなんか上手いことやってくれる的なことが書いてある。これghにも使えるんだろうか</p>
<ul>
<li><a href="https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git">Caching your GitHub credentials in Git - GitHub Docs</a></li>
</ul><hr><p>docker-composeを使うようにして、gitignoreしたdocker-compose.override.ymlで設定する、というworkaroundが良い気がするなあ</p><hr><p>Railsのメソッド定義を省略してテンプレートだけが存在するバージョンのアクションでは、before_actionが実行されないらしいということをjpmobileの開発者に教えてもらった。マジか……。</p>
<pre><code>Started GET "/" for ::1 at 2022-06-06 10:49:51 +0900
   (0.4ms)  SELECT sqlite_version(*)
Processing by HomeController#index as HTML
  Rendering layout layouts/application.html.erb
  Rendering home/index.html.erb within layouts/application
  Rendered home/index.html.erb within layouts/application (Duration: 0.7ms | Allocations: 341)
  Rendered layout layouts/application.html.erb (Duration: 1.0ms | Allocations: 619)
Completed 200 OK in 5ms (Views: 2.4ms | ActiveRecord: 0.0ms | Allocations: 3042)
</code></pre>
<p>こういう感じでログが出るので、明らかに <code>HomeController#index</code> というactionがありそうだし、当然 <code>before_action</code> も実行されるだろ、と思いそう。</p><hr><blockquote>
<p>Railsのメソッド定義を省略してテンプレートだけが存在するバージョンのアクションでは、before_actionが実行されないらしいということを教えてもらった</p>
</blockquote>
<p>実際に確認したところ、これは誤りだった。</p><hr><p>影響力の低いネガティブな情報、をニュースサイトなどからフィルタリングしたいかも、という話をした。</p><hr><p>jpmobileにPull Requestを出した。</p><hr><p>雑Custom cop置き場を有効活用している。</p>
<ul>
<li><a href="https://github.com/r7kamura/sevencop/pull/1">r7kamura/sevencop#1</a></li>
</ul>]]></content:encoded></item><item><title><![CDATA[2022-06-05]]></title><description><![CDATA[r7kamura's working log on 2022-06-05]]></description><link>https://r7kamura.github.io/diary/articles/30</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/30</guid><pubDate>Sat, 04 Jun 2022 22:07:47 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=Nmf0NRTqbyw">作業 with r7kamura #36 - YouTube</a></p><hr><p>カメラが気になってたので、GH5M2とsigma fpでつくったcinematic movieを漁ってみたり、iPhoneでcinematic movieを撮るための方法を色々教えてくれている動画を1～2本見たりした。まるで知らない分野なので、ちょっと見るだけで経験値効率がすごい</p><hr><p>Epoccum + iPhone 12 Pro Max + Windowsで配信するのを試してみた。</p>
<p>良いところ:</p>
<ul>
<li>ロジクールのウェブカメラC980GRに比べて格段に画質が良くなった</li>
<li>暗所でのノイズがない</li>
<li>あらゆる箇所が精細になった</li>
<li>背景の窓が眩しく映りすぎる問題も幾らか解消された</li>
<li>無線なのでそのまま何か映したいとき持っていける</li>
</ul>
<p>悪いところ:</p>
<ul>
<li>Epoccumだと輝度設定やホワイトバランスの調整ができなくてつらい</li>
<li>これまではLogi Captureでなんか上手くやれていた</li>
<li>OBSのカメラ構成でも調整できていた</li>
<li>Epoccumだとカメラ構成で輝度などを調整しても効かない</li>
</ul><hr><p>気ままにCustom copを書き始められるように、自由なカスタムCop置き場をつくった。
<a href="https://github.com/r7kamura/sevencop">r7kamura/sevencop: Custom cops for RuboCop.</a></p><hr><p>RuboCopのCop書くたびに忘れててどこだっけと探すことになるページ
<a href="https://docs.rubocop.org/rubocop-ast/node_pattern.html">Node Pattern :: RuboCop Docs</a></p><hr><p>この日は腹筋ローラーと懸垂をやった。</p>]]></content:encoded></item><item><title><![CDATA[2022-06-04]]></title><description><![CDATA[r7kamura's working log on 2022-06-04]]></description><link>https://r7kamura.github.io/diary/articles/29</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/29</guid><pubDate>Fri, 03 Jun 2022 21:35:18 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=ZmXeTBq0llo">作業 with r7kamura #35 - YouTube</a></p><hr><p>冷房の切タイマーが上手く動いてなくて、寝ている間に寝室の冷房がつけっぱなしだった。しかしよく寝られた。全身すべてが布団に入っている状態のまま睡眠を完遂できると、上手く回復できている気がする。逆に起きたとき布団から出ていたりすると、大抵何か調子が悪い。</p><hr><p>5種目やったところで脚が終わって引退した
<a href="https://www.youtube.com/watch?v=LOuh44mpQRg">【7分】これ一回で十分！超高強度下半身トレーニング【筋トレ】 - YouTube</a></p><hr><p>レモングラス、サンダルウッドはかなり強い香りだったが、ラベンダーのやつはそうでもない。
もっとこう、ラベンダー！富良野！北の国から！みたいな強い香りがきてウッとなることを想像していたのだが……</p><hr><p>今日の俗世:</p>
<ul>
<li>ダニの新種 ツイート リツイート</li>
<li>女性のマウント 3すくみの関係</li>
</ul><hr><p>r7kamura.comのダークモード対応の前段として、Tailwind化、をやろうとしている。</p>
<p>Tailwind最高～～と考えている訳ではないが、特定の要件でTailwind最高～～ where 特定の要件 is larger than expected ぐらいには考えているので、Tailwindのことをもう少し学んでおく必要があると感じている。しかしこういうのは自分事になって身を切らないとなかなか深くまで理解できないので……という訳で、自分のウェブサイトをのCSSをTailwindベースのものに作り変えてみようとしている。まあここのCSSは、創業当時からの秘伝のタレを試行錯誤しながら弄り続けるというよりは、何度もつくりかえるべきものという感じがしている。</p><hr><p><a href="https://r7kamura.com/">r7kamura.com</a>のダークモード対応をやった。</p><hr><p>急にマシュマロを始めた
<a href="https://marshmallow-qa.com/r7kamura">r7kamuraにマシュマロを投げる | マシュマロ</a></p>]]></content:encoded></item><item><title><![CDATA[2022-06-03]]></title><description><![CDATA[r7kamura's working log on 2022-06-03]]></description><link>https://r7kamura.github.io/diary/articles/28</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/28</guid><pubDate>Thu, 02 Jun 2022 21:08:11 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=CfeTmawvUgY">作業 with r7kamura #34 - YouTube</a></p><hr><p>devcontainer、前回Node.jsのコンテナで試したときに <code>git push</code> した瞬間完全に停止するという問題があって簡単にあきらめていたが、再挑戦したい。</p><hr><p>node:18 のイメージが悪いのかと思いきや、他のイメージで試しても問題が起きたので、SSH通信周りで何か失敗してそうな印象がある。</p><hr><p>面白かった
<a href="https://note.com/reisaikigyou_ma/n/ne8f3effb313c">零細企業買収して売却した話｜reisaikigyou_ma｜note</a></p><hr><p>輝度管理アプリとして、Monitorianから<a href="https://twinkletray.com/">Twinkle Tray</a>に移行した。無料で、キーボードショートカットがあるのが便利。</p>]]></content:encoded></item><item><title><![CDATA[2022-06-02]]></title><description><![CDATA[r7kamura's working log on 2022-06-02]]></description><link>https://r7kamura.github.io/diary/articles/27</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/27</guid><pubDate>Wed, 01 Jun 2022 20:48:27 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=H_860YHihis&#x26;ab_channel=r7kamura">作業 with r7kamura #33 - YouTube</a></p><hr><p>GitHubのDropdownを表示させるボタンを押してから実際に表示されるまで待つために、MutationObserverで要素の属性に対する変更を監視してみて、上手くいった。使いやすいAPI。</p><hr><p>ここ数日、寝起きに風邪気味のときに近い症状を感じることが多い。鼻水が出る、喉が痛いの2つ。</p><hr><p>睡眠中は免疫力が低下するため、睡眠時に風邪になる (そこで発症する) ような感じになることは多いらしい。
それから、寝起きに風邪ライクな症状を感じる (睡眠時の炎症に対する防衛反応) ことも多いらしい。</p><hr><p>懸垂:</p>
<ol>
<li>順手5回</li>
<li>1分休憩</li>
<li>逆手3回</li>
<li>1分休憩</li>
<li>順手0回</li>
<li>50分休憩</li>
<li>順手3回</li>
<li>50分休憩</li>
<li>順手2回</li>
</ol><hr><p>アロマディフューザーと、安いアロマオイルセットを手に入れたので、好きな香りを探していくことにした。</p>
<ul>
<li>サンダルウッド
<ul>
<li>新しい筋トレグッズとかにありがちなゴムっぽい? 匂いがする</li>
<li>嫌い</li>
</ul>
</li>
<li>レモングラス
<ul>
<li>レモンだなーという感じ</li>
<li>レモンを押し付けてきていて安っぽい感じはする</li>
<li>嫌いではない</li>
<li>好きというほどでもない</li>
</ul>
</li>
</ul><hr><p>jpmobileにRails 7.0での不具合っぽいものを見つけたので、IssueとPull Requestを出した。</p><hr><p>今日はあまりにも仕事が捗った。</p><hr><p>Issue / Pull Requestの画面で、コメントフォームにフォーカスするショートカットキーを追加した。</p>
<ul>
<li><a href="https://github.com/r7kamura/github-shortcut-plus">https://github.com/r7kamura/github-shortcut-plus</a></li>
</ul>
<p>j や k みたいなキーが登録されることを考慮して、input, textarea, contentEditableにフォーカスしているときはショートカットキーが発動しないようにしている。これは誤動作が防げる一方で、textareaで何か書いてるときに「あ、これしたい」と思ったときに操作できない不便さがある。Tabキーを押してフォーカスを外したりすれば良いわけだが…</p>
<p>フォーカスを外す (Skip to Contentする) ショートカットをあえて追加すれば良いかも？</p><hr><p>腹筋ローラー13日目だが、立ちコロはまだまだ難しい。
立ちコロやろうとして戻れずに地面に倒れ込む、というのだけでもトレーニングになるらしいので、これを何度かやっている。</p>]]></content:encoded></item><item><title><![CDATA[2022-06-01]]></title><description><![CDATA[r7kamura's working log on 2022-06-01]]></description><link>https://r7kamura.github.io/diary/articles/26</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/26</guid><pubDate>Tue, 31 May 2022 22:23:44 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=73ru7RTmXNY&#x26;ab_channel=r7kamura">作業 with r7kamura #32 - YouTube</a></p><hr><p>腕立てを丁寧めにやったら腕が上がらなくなった。タンブラーが重い</p><hr><p>レッグレイズやってみたところ、腰をパッドに少し載せるようにしたらしっかり脚が上がるようになった。これであってるのか……? 腰に負担が来てそうで怖い気もする。</p><hr><p>書いた: <a href="https://r7kamura.com/articles/2022-05-31-work-with-me-31-days">作業配信31日</a></p><hr><p>腹筋ローラー 10回1セット
プランク 90秒 + 60秒
レッグレイズ 5回1セット
腕立て 15回1セット</p>]]></content:encoded></item><item><title><![CDATA[2022-05-31]]></title><description><![CDATA[r7kamura's working log on 2022-05-31]]></description><link>https://r7kamura.github.io/diary/articles/25</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/25</guid><pubDate>Mon, 30 May 2022 20:09:12 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=MB2Mfv_WHZI&#x26;ab_channel=r7kamura">作業 with r7kamura #31 - YouTube</a></p><hr><p>初審査に通っていた。不具合修正を加えて次期バージョンの審査を申請した。名前もRecommendからRecommendationに変更する。
<a href="https://chrome.google.com/webstore/detail/twitter-recommend-block/ekhgcgpangmhninpoeefefbcepiohaod?hl=ja&#x26;authuser=0">Twitter Recommend Block - Chrome ウェブストア</a></p><hr><p>懸垂をやった。</p>
<ul>
<li>Y字 4回</li>
<li>順手 3回</li>
<li>逆手 3回</li>
</ul><hr><p>投稿されていた: <a href="https://r7kamura.com/articles/2022-05-30-supplement">サプリ</a></p><hr><p>音が全体的に小さいと指摘されて、確かにアーカイブを聴く限り小さい気がしていたので、変更を加えた。
Yetiはハードウェア側でGainの調整ができるので、これを50%程度だったのを、85%程度の位置に変更した。
これだけだとノイズが大きくなるはずなので、合わせてOBSでRNN方式のノイズ除去フィルターを掛ける。</p><hr><p>作業配信31日の振り返り記事を書いた。</p><hr><p>使っている文具:</p>
<ul>
<li><a href="https://www.amazon.co.jp/dp/B002CKDDYQ">Amazon | 三菱鉛筆 水性ボールペン ユニボール プロテック uni-ball UB-155 0.5mm 青 / 10本 | 水性ボールペン | 文房具・オフィス用品</a>
<ul>
<li>10年以上前から使っている</li>
<li>文具屋によく置いてる</li>
<li>どうでも良いことだがペン回しにおいてもバランスが良い</li>
</ul>
</li>
<li><a href="https://www.amazon.co.jp/dp/B016PIGCG6?th=1">Amazon | コクヨ ノート リングノート 大人 キャンパス 方眼罫 A5 50枚 ス-T133S5-D 黒 | 文房具・オフィス用品 | 文房具・オフィス用品</a>
<ul>
<li>端まで全面印刷されてる薄めの5mm方眼、ダブルリング、というところが気に入っている</li>
</ul>
</li>
</ul><hr><p>腹筋ローラー 10回2セット</p><hr><p>腹筋ローラー、立ちコロは最初は戻れなくてもぺたんとお腹が地面につくまでやるだけでも良いらしい。戻るときより行くときの方が負荷が高い傾向にあり、それだけでも筋トレになるとのこと。</p><hr><p>ケーブルマネジメントをしっかりやっていきたいという気持ちがあり、ディスプレイ用に長めのHDMIケーブルと、それからケーブルを束ねるためのやつを購入するかという気持ちになった</p>]]></content:encoded></item><item><title><![CDATA[2022-05-30]]></title><description><![CDATA[r7kamura's working log on 2022-05-30]]></description><link>https://r7kamura.github.io/diary/articles/24</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/24</guid><pubDate>Sun, 29 May 2022 20:08:36 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=nIIJ5DiPWes&#x26;ab_channel=r7kamura">作業 with r7kamura #30 - YouTube</a></p><hr><p>これの続き
<a href="https://github.com/r7kamura/twitter-recommendation-block">https://github.com/r7kamura/twitter-recommendation-block</a></p><hr><p>完成させて、審査に出した。
<a href="https://github.com/r7kamura/twitter-recommendation-block">https://github.com/r7kamura/twitter-recommendation-block</a></p><hr><p>ブログ記事を書いた。最近、書いてすぐに投稿せずに、毎日朝4時頃に定期実行されるバッチでの投稿に任せている。</p><hr><p><code>only_safe: false</code> にしても効かない、と思ったらinputsは全て文字列として扱われるらしかった。この不具合を修正した。
<a href="https://github.com/r7kamura/rubocop-todo-corrector">https://github.com/r7kamura/rubocop-todo-corrector</a></p><hr><p>twitter-reecommendation-block、いいねされたツイートを見ると、おすすめユーザーを非表示にする機能が暴発していて、Followableなユーザーがツイートの下や、いいねを押したときのポップアップに表示されない、という問題があるようだ。</p><hr><p>いろいろ直した。いろいろ。</p><hr><ul>
<li>背筋10回2セット</li>
<li>プランク60秒4セット</li>
</ul><hr><p>YouTubeの公開予約が便利そうだったので用意してみた。</p>
<p><img src="https://user-images.githubusercontent.com/111689/170935625-296c001c-b6ae-4c20-8859-d0a7f32f172a.png" alt="image"></p>
<p><a href="https://www.youtube.com/watch?v=MB2Mfv_WHZI&#x26;ab_channel=r7kamura">作業 with r7kamura #31 - YouTube</a></p>]]></content:encoded></item><item><title><![CDATA[2022-05-29]]></title><description><![CDATA[r7kamura's working log on 2022-05-29]]></description><link>https://r7kamura.github.io/diary/articles/23</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/23</guid><pubDate>Sat, 28 May 2022 21:00:25 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=AC-8gSGSpO8&#x26;ab_channel=r7kamura">作業 with r7kamura #29 - YouTube</a></p><hr><p>書いた
<a href="https://r7kamura.com/articles/2022-05-28-air-conditioner-cleaning">エアコンの掃除と試運転</a></p><hr><p>書いた
<a href="https://r7kamura.com/articles/2022-05-28-chinning-machine-st115">懸垂マシン ST115</a></p><hr><p>作業配信 第27回からYouTube Audio Libraryの楽曲を使ってみている。</p>
<p>著作権申し立ては来ていないので、問題無し。2日前の配信である第27回には、楽曲のクレジットが概要欄に自動的に追加されていた。1日前の配信にはまだ追加されていなかった。2日程度掛かる模様。</p><hr><p>懸垂 逆手4回
昨日の筋肉痛を引きずったままやったら全然できなくてすごい</p><hr><p>Chromeウェブストアの審査に出した。
<a href="https://github.com/r7kamura/twitter-shortcut-plus">r7kamura/twitter-shortcut-plus: Browser extension to add more keyboard shortcuts to twitter.com.</a></p><hr><p>twitter.comを使うようにしてみた感想:</p>
<ul>
<li>シンプルで単一用途的なところがそこそこ良い
<ul>
<li>1つのデバイスや1つのアプリでいろいろ出来てしまうと、用もないのにそれを使い続けてしまうという負の側面がある</li>
</ul>
</li>
<li>おすすめ○○が非常に鬱陶しい
<ul>
<li>Twitter Recommend Block をつくりたい</li>
</ul>
</li>
</ul><hr><p>つくりはじめた
<a href="https://github.com/r7kamura/twitter-recommendation-block">r7kamura/twitter-recommendation-block: Chrome extension to block recommendation and promotion contents on twitter.com.</a></p><hr><p>twitterのpromoted tweetsを <code>Element.remove</code> で消す作戦を試したところ、定期的な? データ取得タイミングでタイムラインがいきなり something went wrong に変わるという問題が常に再現したので、removeだとダメそう。代わりに element.style.display = "none" だと上手くいった。</p><hr><p>腹筋ローラーを25回ほどやった。ゆっくりめに戻るようにしたらしんどい。</p><hr><p>パワーグリップが届いたので順手懸垂を試したが、今日は既に腕の力が終わってて3回で限界に。代わりにレッグレイズを試して、今日は昨日よりは脚を伸ばしながら上げ下げできるようになっていた。これ腰に負担が来そうで少し怖い。</p>]]></content:encoded></item><item><title><![CDATA[2022-05-28]]></title><description><![CDATA[r7kamura's working log on 2022-05-28]]></description><link>https://r7kamura.github.io/diary/articles/22</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/22</guid><pubDate>Fri, 27 May 2022 19:59:17 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=1eI3HMxjMto&#x26;ab_channel=r7kamura">作業 with r7kamura #28 - YouTube</a></p><hr><p>懸垂 順手4回 逆手3回</p><hr><p>腕立て伏せ15回</p><hr><p>腕が終わりすぎてタンブラーを持ち上げるだけで苦労して笑っちゃった</p><hr><p>PowerToysには、最近VSCodeで開いたWorkspaceを検索する、という機能がある。</p>
<p><img src="https://user-images.githubusercontent.com/111689/170793391-06900aa6-7644-4e8f-8342-dc4b8c9813b6.png" alt="image"></p>
<p>これは一体どこからデータを取得しているのだろう、しかしソースコードが公開されているとはいえ、C#は読めねえ……と思っていたところ、StackOverflowでどこに保存されているか教えてくれている人がいた。</p>
<p><a href="https://stackoverflow.com/questions/54244342/list-vs-code-recent-workspaces-from-the-command-line">vscode settings - List VS Code recent workspaces from the command line - Stack Overflow</a></p>
<pre><code>C:\Users\&#x3C;USER>\AppData\Roaming\Code\User\workspaceStorage\*\workspace.json
</code></pre>
<p>という感じのパスにJSONで保存されているので、これを適当に漁れば良いらしい。もし検索結果から消したかったら、ここから消すと良いのだろうか。</p><hr><p>腹筋ローラー 10回</p><hr><p>フィルターのお手入れ表示が出ていたので、エアコンのフィルターの掃除をした。ダイキンの業務用のやつで、天井埋め込み型でラウンドフロー型 (4方向に風が出る) だったが、まあやることは簡単でボタンを2個同時に押してフタをだらんと開いた状態にし、あとは掃除機で埃を吸い込めばOK。しかしまあほぼ汚れていなかった。</p><hr><p>古いほうのAirPods Proをもしかしたら修理交換してもらえるかもしれない。ということで修理予約を入れた。</p>
<p>付けるときにキュイイッと甲高い異音がするし、2020年10月以前につくられた製品には異音問題があるらしく、この製品を購入したのは2020年12月で微妙なところ。</p><hr><p>twitter.comの各要素にアクセスする方法:</p>
<ul>
<li>j/kで移動している中で、選択中のアイテム
<ul>
<li>document.activeElement</li>
</ul>
</li>
<li>ツイート内の画像
<ul>
<li><code>img[alt="画像"]</code></li>
<li>locale設定に依存する</li>
</ul>
</li>
</ul><hr><p>作り始めた
<a href="https://github.com/r7kamura/twitter-shortcut-plus">r7kamura/twitter-shortcut-plus: Browser extension to add more keyboard shortcuts to twitter.com.</a></p><hr><p>今日の俗世:</p>
<ul>
<li>岸田トークン</li>
<li>資料修復技術でエロ本を蘇生</li>
</ul><hr><p>懸垂マシンでレッグレイズをやる方法を調べて、5回×3セットぐらい軽くやってみた。脚を伸ばすのは全然無理。とにかく身体を反らしてしまわないように気を付けたい。
<a href="https://www.youtube.com/watch?v=RuynaHvOv5Y&#x26;ab_channel=ShuichiToda%E6%88%B8%E7%94%B0%E7%A7%80%E4%B8%80">【筋トレ】腹筋だけを効果的に鍛えるレッグレイズのポイント - YouTube</a></p><hr><p>smile.amazon.comというドメインの存在を初めて知った。
<a href="https://github.com/r7kamura/amazon_url_shortener/issues/17">Feature request: Add in support for smile.amazon.com links · Issue #17 · r7kamura/amazon_url_shortener</a></p>]]></content:encoded></item><item><title><![CDATA[2022-05-27]]></title><description><![CDATA[r7kamura's working log on 2022-05-27]]></description><link>https://r7kamura.github.io/diary/articles/21</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/21</guid><pubDate>Thu, 26 May 2022 20:17:37 GMT</pubDate><content:encoded><![CDATA[<hr><p>今日の俗世:</p>
<ul>
<li>ゲーミング箸</li>
<li>壱百満天原サロメ</li>
</ul><hr><p><a href="https://www.youtube.com/watch?v=za9xTbJUzPQ&#x26;ab_channel=r7kamura">作業 with r7kamura #27 - YouTube</a></p><hr><p>他の人が映している自分のYouTubeの映像の写真を見てみると、自分でプレビューで見るよりかなり高画質で、プレビューとの乖離があることが分かる。</p><hr><p>作業配信環境に幾らかアップデートがあるたびに、作業配信環境をまとめる記事を新たに書こうとするが、少し書くたびに「そんなに需要無いな」と思ってゴミ箱に捨てている。</p><hr><p>rubocop-todo-correctorでPull Requestをつくったときに、pull_request event契機の他のworkflowも実行されてほしいが、デフォルトのGITHUB_TOKENを使っていると実行されない。</p>
<p>これは<a href="https://docs.github.com/en//actions/security-guides/automatic-token-authentication">Automatic token authentication - GitHub Docs</a>で説明されている。</p>
<blockquote>
<p>When you use the repository's GITHUB_TOKEN to perform tasks, events triggered by the GITHUB_TOKEN will not create a new workflow run. This prevents you from accidentally creating recursive workflow runs. For example, if a workflow run pushes code using the repository's GITHUB_TOKEN, a new workflow will not run even when the repository contains a workflow configured to run when push events occur.</p>
</blockquote>
<p>GitHub Appで組織ごとにaccess tokenを発行すると良さそうな雰囲気があるので、これが使えるか試してみたい。</p><hr><p>rubocop 1.30で、auto-correctがautocorrectに統一されたらしい。これにより、色々なものが壊れるようになった。驚いたのが、auto-correctの方を正規形とするのかと思いきや、autocorrectの方を正規形とするみたいだ。automobileみたいなものかね。</p>
<ul>
<li><a href="https://github.com/rubocop/rubocop/pull/10547">[Fix #10095] Change "auto-correct" to "autocorrect" by chris-hewitt · Pull Request #10547 · rubocop/rubocop</a></li>
</ul>
<p>rubocop-todo-correctorも壊れていたので対応した。</p><hr><p>懸垂マシンの配送状況が気になって調べたところ、昨日の昼時点で関西に居たらしい。</p><hr><ol>
<li>r7kamura名義でGitHub App Aをつくる</li>
<li>r7kamura/x にAをインストールする (実際の操作としては、Aをr7kamuraにインストールするときにxのみを選択)</li>
<li>r7kamura/x で <a href="https://github.com/tibdex/github-app-token">https://github.com/tibdex/github-app-token</a> を利用してアクセストークンを発行する</li>
</ol>
<p>という実験が成功。</p><hr><p>rubocop-todo-corrector custom actionで利用するアクセストークンについて、actions/checkoutではデフォルトのもの (github.token) を使い、gh pr createのときだけもしwithで指定されていたらそのアクセストークン、無ければデフォルトのアクセストークンを使う、というように変更すれば良いように思った。</p>
<p>つまり、アプリで発行するアクセストークンの権限について、</p>
<ul>
<li>pull requestのwrite</li>
<li>workflowのwrite</li>
</ul>
<p>のscopeだけあれば良くて、</p>
<ul>
<li>contentのwrite</li>
</ul>
<p>は不要そう?</p><hr><pre><code class="language-yaml">- run: echo "${{ inputs.access_token || github.token }}" | gh auth login --with-token
</code></pre>
<p>こんな感じ?</p><hr><p>作業配信で、YouTube Audio Libraryの曲を使ってみることにした。
探すのに一苦労だが……誰かが良さげな曲をまとめてくれたやつを参考に探している。</p><hr><p>Re: <a href="https://motemen.hatenablog.com/entry/2022/05/concentration-hacks">集中するためにやっていること2022 - 詩と創作・思索のひろば</a></p>
<blockquote>
<p>本来の話とは関係ないことを書き出しておき、横道にそれることを防ぐやり方</p>
</blockquote>
<blockquote>
<p>書き出す先が手元のアプリとかだと、そのままネットサーフィンなどしだすのでいけない</p>
</blockquote>
<p>自分も、思い付きは紙のノートに書き出して忘れるようにしている。</p>
<p>PCでやるとネットサーフィンなどしだすというのは確かに。複数の機能を持つデバイス (e.g. PC、スマホ) と比べて、単純な機能しか持たないデバイス (e.g. 紙の付箋、紙のノート) は、そういうところで利点がある。</p>
<p>寝る前にいま考えていることをノート等に書き出しておくとよく寝られる、という話をどこかで読んだ気がする。<a href="https://www.amazon.co.jp/dp/B07KWLFXX1">スゴい早起き</a> だったか。このこともあって、最近よく紙のノートに雑多なメモを書きがち。たまにノートをパラパラと読み返すのは面白い。</p><hr><p>workflow権限を持つGitHub Appベースで作成したアクセストークンを使ってrubocop-todo-correctorを動かし、自動的にPull RequestでGitHub Action (この場合はRuboCopによりLint; 分かりづらい) が動作する、という実験が成功した。</p>
<p><img src="https://user-images.githubusercontent.com/111689/170610432-7a17581e-6b67-46ed-8ed4-ba731d32d32d.png" alt="image"></p><hr><p>うちの炊飯器はジャスト50分間で炊きあがるので、作業時間開始直後に炊き始めないと、次の休憩時間に炊飯が間に合わない。</p><hr><p>Twitterのノイズを消す拡張、という切り口のものがあった。</p>
<ul>
<li><a href="https://chrome.google.com/webstore/detail/twitter-stress-reduction/ipnjgahnocpaefhffbnnjonihlihoeic?hl=ja">Twitter Stress Reduction - Chrome ウェブストア</a></li>
</ul>
<p>自作するなら、Twitterのおすすめを消す拡張、という切り口のものをつくるのが良いかもしれない。Twitterは要素に適当なクラス名が振られていないので、実装は結構大変そう。</p>
<p>他にまずまずユーザーがあるものとしてはこの辺:</p>
<ul>
<li><a href="https://chrome.google.com/webstore/detail/twitter%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%88%E3%82%AB%E3%83%83%E3%83%88%E3%82%92%E7%84%A1%E5%8A%B9%E5%8C%96%E3%81%99/cebkmpjkademcaigilgldjonmphfbmfh?hl=ja">Twitterのキーボードショートカットを無効化するやつ - Chrome ウェブストア</a></li>
<li><a href="https://chrome.google.com/webstore/detail/twitter-media-downloader/cblpjenafgeohmnjknfhpdbdljfkndig">Twitter メディアダウンローダ - Chrome ウェブストア</a></li>
</ul>
<p>メディアダウンローダに10万人いるのはすごい。</p><hr><p>懸垂マシンを完成させた。1人でゆっくりやって2時間弱掛かった。</p>
<p>とりあえず逆手で5回、順手で3回やった (つーかこれが限界)。</p><hr><p><a href="https://www.youtube.com/clip/Ugkxy2NXpdlfZF0kT9s-MoCOrbB1wpWEryK9">✂️ 懸垂 - YouTube</a></p>]]></content:encoded></item><item><title><![CDATA[2022-05-26]]></title><description><![CDATA[r7kamura's working log on 2022-05-26]]></description><link>https://r7kamura.github.io/diary/articles/20</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/20</guid><pubDate>Wed, 25 May 2022 22:00:47 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=sY_FBAw1y4g&#x26;ab_channel=r7kamura">作業 with r7kamura #26 - YouTube</a></p><hr><p>今日の俗世:</p>
<ul>
<li>4299万円回収</li>
<li>ワッカ ミーム化</li>
<li>ゆっくり茶番劇 登録抹消申請</li>
</ul><hr><p>TweetDeck Shortcut Plusが完成したので、Twitter Shortcut Plusもつくりたいと思っていたが、公式Twitterは自分が使っていないのであまりモチベーションが湧かない……</p><hr><p>腹筋ローラー 30回1セット</p>
<p>左の二の腕の外側らへんちょっと痛めたかも。</p><hr><p>屋外のベランダでほこりを被ってきたウッドデッキとチェアとデスクを掃除するのに、これはどうかという話
<a href="https://www.amazon.co.jp/dp/B00BYJV4CE">Amazon | 工進(KOSHIN) 蓄圧式 噴霧器 タンク 4L ミスターオート HS-401E 1段 ノズル 噴口 1個 防除 消毒 散布 | 噴霧器・アクセサリー</a></p><hr><p>デッキブラシは200円で捨てられるらしい。知らない自治体での話だが。
<a href="https://www.city.iga.lg.jp/faq/faq_detail.php?co=new&#x26;frmId=481#:~:text=%E5%BB%83%E6%A3%84%E7%89%A9%E5%AF%BE%E7%AD%96%E8%AA%B2%E3%81%8B%E3%82%89,%E3%81%A7%E3%81%AE%E5%8F%8E%E9%9B%86%E3%81%A8%E3%81%AA%E3%82%8A%E3%81%BE%E3%81%99%E3%80%82">デッキブラシの捨て方【2019年1月更新】 | よくある質問 | 伊賀市</a></p><hr><p>これぐらいが丁度いい気がする。
<a href="https://www.amazon.co.jp/dp/B00IUES4U6">Amazon | 山崎産業 清掃用品 JP デッキブラシ180 CL673-000J-MB | 業務用デッキブラシ | 産業・研究開発用品 通販</a></p><hr><p><a href="https://automaton-media.com/articles/newsjp/20220526-204028/">光る「ゲーミング箸」販売開始。食事のおともの“箸”が、手元でビカビカに光る - AUTOMATON</a></p><hr><p>10000冊読書した人の本を読んだ。</p>
<p>本を選ぶときの話が良かった。読む前からある程度下調べをし、要約やレビュー、目次を読み、自分の目的を満たしてくれるものかどうか調べてから読む方が、その読書が成功する確率は著しく上昇する。逆に、場当たり的になんとなく気になったからと読んでも、成功する確率は低い。という話。</p>
<p>本からのアウトプットの話も良かった。本を読んだことによって何らかのアウトプット……自身の行動の変化、が成果として現れないのであれば、どれだけ本を読んでも意味が無い。よって、何らかの変化が生まれることが成功である。という話。</p>]]></content:encoded></item><item><title><![CDATA[2022-05-25]]></title><description><![CDATA[r7kamura's working log on 2022-05-25]]></description><link>https://r7kamura.github.io/diary/articles/19</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/19</guid><pubDate>Tue, 24 May 2022 20:53:06 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=mwYwYjfSZ2o&#x26;ab_channel=r7kamura">作業 with r7kamura #25 - YouTube</a></p><hr><p>昨日書いた<a href="https://r7kamura.com/articles/2022-05-24-sustainable-rails">『Sustainable Web Development with Ruby on Rails』を読んだ</a>にそこそこ反響があった。</p><hr><p><a href="https://github.com/r7kamura/tweetdeck-shortcut-plus">https://github.com/r7kamura/tweetdeck-shortcut-plus</a> の0.1.0が審査に通っていたので、0.2.2を審査に出した。0.1.0は不具合があるため。</p><hr><p>買おうか迷ってウダウダしていたが、勢いで懸垂マシン (<a href="https://www.amazon.co.jp/dp/B09K3QQBKH">ST115</a>) を購入した。金曜～日曜に届くとのこと。</p><hr><p>伊之助のコスプレの腹筋ローラーの人 (<a href="https://twitter.com/InosukeWorkout">inosukeWorkout</a>)、1日目から膝コロ60回+立ちコロ10回とかやってた。</p><hr><p>今日の俗世</p>
<ul>
<li>冨樫義博 Twitterを開始</li>
<li>アメリカ 銃乱射事件</li>
</ul><hr><p>野菜の良いバイキングの店:</p>
<ul>
<li><a href="https://www.sizzler.jp/">sizzler | シズラー</a></li>
</ul><hr><p>いつも使っている乳液が切れたので、Amazonで同商品のおすすめ欄にいた同程度のレビューの謎の乳液を買った。</p><hr><p>腹筋ローラー 10回5セット</p><hr><p>"AppBrew Rails Best Practices" を書き終わった。そしてこのプラクティスに現状沿っていないところを直している……</p>]]></content:encoded></item><item><title><![CDATA[2022-05-24]]></title><description><![CDATA[r7kamura's working log on 2022-05-24]]></description><link>https://r7kamura.github.io/diary/articles/18</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/18</guid><pubDate>Mon, 23 May 2022 20:17:50 GMT</pubDate><content:encoded><![CDATA[<hr><p>今日の俗世:</p>
<ul>
<li>3500万円返金</li>
<li>イーロンマスク エルデの王へ</li>
<li>知床観光船事故 海底182m</li>
</ul><hr><p><a href="https://www.youtube.com/watch?v=X4sxEU3lFT8&#x26;ab_channel=r7kamura">作業 with r7kamura #24 - YouTube</a></p><hr><p>Sustainable Railsを読んでいく</p>
<h3>logrageはtest環境で使う</h3>
<p>development環境以外でlogrageを有効化している。test環境ではlograge有効化してほしくないな。production環境みたいな絶対に機械的しか見ないような場所では良いと思う。</p>
<h3>app以下にapp/models以外にドメインモデルの亜種を増やす</h3>
<p>ビジネスロジックを書くときはそれ専用の app/services みたいなディレクトリを使うらしい。自分はディレクトリを増やすことには反対で、すべてのビジネスロジック用クラスはドメインモデルの亜種だと思うので、app/models以下に定義した方が良いと考えている派。autoloaderの厄介事も増えて複雑になるし、ディレクトリが増えれば増えるほど命名規則がブレるようになるし。ActiveRecordにロジックを盛り込むかどうかという議論はまた別の話。</p>
<h3>ビジネスロジックを記述するクラスを細かく分ける</h3>
<p>ビジネスロジックを書くときにクラスを細かく分けろという話がある。これには賛成。なぜなら、人はプログラムの大まかな構造を理解するときに、クラス間の関係性に着目して理解することが多いから。よく参照されているクラスに不具合があると、確認しなければいけない可能性のあるクラスが増える……という例が示されている。構造や関係性を表明するための手段としてクラスを細かく分ける。</p>
<h3>常にresource-fulなroutingを使うべき</h3>
<p><code>resources :foos</code> と <code>get ...</code> とどっちを使うべきかという話について、後者を使うのは全くもって無益だとしている。そこまでか？でも、どちらにするかはともかく、どちらか片方に寄せるという姿勢は好ましいと思う。</p>
<h3>Don’t Create Custom Actions, Create More Resources</h3>
<p>"create more resources"という表現は良い。"コントローラーを分けた方がいい"、とするよりもこっちのほうが納得感が出るかも?</p>
<h3>Resources should never be nested more than 1 level deep</h3>
<p>という記述がガイドにあるのか。確かにこのルールが丁度良いと思う。</p>
<h3>Bet you didn’t think routing was such a deep topic!</h3>
<p>わかる。ルーティングは超大事な部分だが、かなり軽視されていてつらくなりがち。</p>
<h3>Ideally, Expose One Instance Variable Per Action</h3>
<p>可能なのか？そんなルールを掲げることが。
コントローラーからテンプレートにインスタンス変数で値を渡すという仕組みはひどい仕組みだとは思っているので、まああんまり多用しない方が良いよなという意味では賛成寄りではあるが、1個にしよう、とかあえて言うべきことなのだろうか。コントローラーでmemoizeしててヘルパーから透過的に触ってるやつ、とかもあるしなあ。</p>
<h3>Helpers are Best at Exposing Global UI State and Generating Markup</h3>
<p>ヘルパーは、Railsの提供するやつのようなグローバルなタイプのヘルパーとしては上手く働くという話。</p>
<h3>Just Use ERB</h3>
<p>そうだね。自分もERBの方が総合的には上手くいくと思っている。</p>
<p>テンプレートエンジンに関する話題で言うと、自分の中では、erbcopとslimcopの存在が大きくて、これが無いとテンプレートエンジン中のRubyコードに対してRuboCopで自動置換が出来ない。hamlcopもつくろうとしてみたんだけど、hamlパーサーを書くのが大変で実用段階には至らなかった (誰か完成させてほしい)。話を戻すと、RuboCopと親和性が最も高いということが、自分の中でERBを推す理由の一つになっている。</p>
<h3>Presenter</h3>
<p>Presenterの問題点:</p>
<ul>
<li>直接モデルにアクセスするか、Presenterを通してアクセスするか、2つの方法が生まれてしまう。2つの方法が生まれるとね3つめもどうせ生まれてしまう</li>
<li>Viewのコードを見ても、値がPresenterなのかただのModelなのか分からない</li>
</ul>
<p>…としていて、これには同意するところではあるが、でもそれってお前の言っているサービスクラスってやつについても言えるんじゃないか？</p>
<h3>変数の命名</h3>
<blockquote>
<p>I strongly recommend you name objects based on their actual class and do not pretend presenters are actually domain objects. For example, use @widget_presenter if the object is a WidgetPresenter, <a href="https://github.com/widget"><strong>@widget</strong></a> if it’s a Widget.</p>
</blockquote>
<p>それ。</p>
<p>ということはつまり、Foo::Barがあるとしたらbarという名前を使うべきという話だよな。ということは、Services::FooではなくServices::FooServiceとしなければならない。</p>
<p>あと個人的に名前について言いたいことがあるとすると、現代はエディタが十分にまともなので、名前は十分に長くても構わないと思う。英単語以上の省略は絶対にするべきではないし (例: eventをeとするなど)、widget_idをidとすべきでもない。</p>
<h3>テスト時間かかりすぎ問題</h3>
<blockquote>
<p>If tests are too brittle, duplicative, slow, or focused on the wrong things, the test suite will drag the team down.</p>
</blockquote>
<p>巷のRailsアプリは変なところにテスト書きすぎてて効率悪くなってる印象がある。ので引用した。悪いテストはチームの足を引っ張る。</p>
<blockquote>
<p>The strategy I recommend is to have a system test for every major user flow, use unit tests to get coverage of anything else that is important, and closely monitor production for failures.</p>
</blockquote>
<p>"major user flow" の例として、ログインページが良い例、FAQページが良くない例だと言っている。つまり全部ではなく、本当にコアなところにだけsystem-specを書くべき。じゃあ本当にコアなところって何やねんって言うと…? 特に深掘りされてなかった。</p>
<p>System Testについてもこう書けるよとしか紹介されてなくて、そのまま書き続けていくとマジで時間が掛かる遅いテストスイートが出来上がるぜ的なことは書かれていなかった。</p>
<h3>HTMLのテストの小技</h3>
<p>data-attributeにテストで検証する用の値 (IDとか) を埋め込んでおく小技が紹介されている。マジで小技だな…</p>
<h3>ビジネスロジック</h3>
<p>もしRailsというものが無くて、普通のRubyのコードだったらどうする? 普通にクラスを書いて、普通にメソッドを定義して、普通に呼び出すよね？ Railsであってもそうすべき、と言っている。</p>
<h3>サービスクラス</h3>
<pre><code class="language-ruby">FooCreator.new.create_foo(...)
</code></pre>
<p>と呼び出せるようなクラスが理想的だ、と言っている。</p>
<p>一方、自分は次のようなものが理想的だと思っている。</p>
<pre><code class="language-ruby">FooCreator.call(...)
</code></pre>
<p>本書的には、.call だと内部で一時的に状態を持ちたいときに使えなくて不便だと言っている。自分的には、それは内部実装次第で解決できることだと思っている。</p>
<pre><code class="language-ruby">class FooCreator
  class &#x3C;&#x3C; self
    def call(...)
      new(...).call
    end
  end

  def initialize(...)
    ...
  end

  def call
    ...
  end
end
</code></pre>
<p>また本書的には、本書のようにしないと2つ目のメソッドを足したくなったときに困り、引数を足すか別のクラスをつくらないといけなくて不便だと言っている。</p>
<blockquote>
<p>Further, the command pattern makes it difficult or impossible to add a second method on the service class if that should later make sense. For example, if there comes a need for a second widget creation process, by following the guidelines I’ve laid out, you could conceivably make a new method on WidgetsCreator and share any needed logic privately and internally. If you’ve used the command pattern, you either need to pass some behavior-modifying flags to the constructor or make a new class and figure out how to share needed logic publicly. This is a more complex result that the command pattern more or less forces you into.</p>
</blockquote>
<p>自分的には、これは引数を足すか別のクラスをつくるべきだと思う。もしここで同じクラスに複数のメソッドを足していくべきだと言うのなら、1つのControllerにいろいろなActionを定義すべきでないという話と矛盾すると思っている。</p>
<p>とはいえ、似ているが少し違うクラスが沢山あって好きに選んでくださいというパターンは、認知負荷が高まるとも思うので、一概に最高かというとそうでもないかもしれない。<a href="https://engineers.ntt.com/entry/2022/05/23/083118">ソフトウェア設計についてtwada技術顧問と話してみた 〜 A Philosophy of Software Design をベースに 〜 - NTT Communications Engineers' Blog</a> の話が少し関連している。</p>
<p>齟齬があるかもしれないが、本書は大クラス主義を推している一方、Railsのコントローラーについてだけは小クラス主義を推している、というところに矛盾を感じるのだろうか。そして、自分はサービスクラスについては小クラス主義を推している一方で、ActiveRecord::Baseを継承するようなモデルクラスでは「別に必要ならメソッド足しまくればええやん」ということを思っていて、矛盾している。こういう反論したい意見が出てきてこそ、読む価値のある本と言える。</p>
<blockquote>
<p>Validations Are Awesome For User Experience</p>
</blockquote>
<p>Validationはデータの整合性を完璧に保つものではないから、UXのために使うべきだよとまとめている。いいまとめ方。ActiveRecordでのvalidationって、フロントエンドでのエラーチェックに似てるところがあるよね。</p>
<blockquote>
<p>How to (Barely) Use Callbacks</p>
</blockquote>
<p>あんまり使うなと言っている。あるあるですな。自分の話だけど、既にコールバックが多用されてるRailsアプリから、コールバックを引き剥がしたいという要求が開発者から挙がるのを、10社ぐらいで見ている気がする。</p>
<blockquote>
<p>Scopes are Often Business Logic and Belong Elsewhere</p>
</blockquote>
<p>3回書いたらscope化しろと言っている。ただあまり考察はなされていなくて、「普通にスコープをつくることもできるし、サービスクラスをつくってそこでスコープ的なこともできるよね。まあいろんなところで何度も使われるスコープっていうのはビジネスロジック色は薄くてデータ操作的だと言えるから、これはスコープで良いんじゃないか」と言っている。そういう温度感で良いのか？</p>
<blockquote>
<p>Don’t Over-use Callbacks</p>
</blockquote>
<p>Railsのscaffoldが生成する <code>before_action :set_article</code> のようなcallbackが批判されていて、それはそのアクションの主たる部分だからアクションの中に置くべきだと言っている。これは自分的にも賛成。
一方で、巷のRailsアプリだとbefore_actionで書いてほしいようなものをアクション内に記述していて分かりづらい (しアクション本体で処理を中断してレスポンスを返すとその事実がログに残らないのでデバッグしづらい) という問題があったりもするので、Don't Over-useと喧伝するのもどうかなと思う。本文中でもそう言っているけど、気を付けながら使おう、ぐらいの見出しが丁度良いと思う。</p>
<blockquote>
<p>Queue Jobs Directly, and Have Them Defer to Your Business Logic Code</p>
</blockquote>
<p>ActiveJobを使うと引数のシリアライズとかで悩まされるから、それは避けてSidekiqとかのAPIを直接叩けとのこと。マジか。何か過去にジョブ周りでミスって重大な損失を被った悲しい経験があるのか……?</p>
<blockquote>
<p>Rake Tasks Should Not Contain Business Logic</p>
</blockquote>
<p>コントローラーやジョブと同じように、Rakeタスクもビジネスロジックを含めないべき (サービスクラスを呼ぶなどしろ) としている。これには同意。直接ビジネスロジックが書かれているRakeタスクとかどうせテストも禄にされてないしな。</p><hr><p>A Philosophy of Software Designは読んでみたいところ。</p><hr><p>Sustainable Web Development with Ruby on Railsを読み終えた。後半はなんかこう言及すべきトピックがあまり無かったのでざーっと読み流した。</p><hr><p>同作者のもの:</p>
<ul>
<li><a href="https://brutalist-web.design/">Brutalist Web Design</a></li>
<li><a href="https://gigazine.net/news/20180710-brutalist-web-design/">ウェブデザインの本質に主眼を置いたデザインガイドライン「ブルータリスト・ウェブ・デザイン」 - GIGAZINE</a></li>
</ul><hr><p>書いた: <a href="https://r7kamura.com/articles/2022-05-24-sustainable-rails">『Sustainable Web Development with Ruby on Rails』を読んだ</a></p><hr><p>腹筋ローラー 10回3セット</p>]]></content:encoded></item><item><title><![CDATA[2022-05-23]]></title><description><![CDATA[r7kamura's working log on 2022-05-23]]></description><link>https://r7kamura.github.io/diary/articles/17</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/17</guid><pubDate>Sun, 22 May 2022 22:36:54 GMT</pubDate><content:encoded><![CDATA[<hr><p><a href="https://www.youtube.com/watch?v=KtfRmyQIrAE&#x26;ab_channel=r7kamura">作業 with r7kamura #23 - YouTube</a></p><hr><p>OBSのVLCメディアソースで、プレイリストファイルではなくディレクトリから選べることを知った。これで、プレイリストをつくらなくてもディレクトリに楽曲を放り込んでおけばOKな状態になった。早速既存のプレイリストは削除して、ディレクトリで指定するように変更した。どの辺がVLCに関係しているのかいまいち謎だが。内部的にVLCを通して音声ファイルを扱っているのかな。</p><hr><p>昨日の作業ではTailwindを初めて利用できて良かった。</p>
<p>CSSは、次のいずれかの手段が現状の最適解だと思っているので、後者のパターンで採用する際の存在としてTailwindは優秀な選択肢。</p>
<ul>
<li>全部自分で書く</li>
<li>何も書かない</li>
</ul>
<p>デザインセンス無しで活用できるものでは決してないとは思うけれど、変なことはできないようになっているはずなので、普通にCSSを書く場合と比べると、良いものが出来やすいようにはなっていると思う。</p><hr><p>この前ReactのuseEffectを利用したが、以前と比べて、つまりclass componentでcomponentDidMount等を利用して同等の機能を実現していた場合と比べて、関数の名前がやっていることを特に表していないので本当に分かりづらいという部分が気になった。クラスを使わずに実現するという方針は良いが、名前の付け方が悪くて、別の点で使いづらく、勿体ない。</p><hr><p>鳴らしている雨の音が2秒間ぐらいの無音から開始するせいで、ループ時に途切れるような感覚になることがあった。Window 10標準の方法でmp3のトリミングを行う方法は無さそうだったので (mp4ならフォトアプリがあったのだが)、Audacityを入れて編集した。これで配信時の雨の音が改善された。</p><hr><blockquote>
<p>OBSのVLCメディアソースで、プレイリストファイルではなくディレクトリから選べることを知った。これで、プレイリストをつくらなくてもディレクトリに楽曲を放り込んでおけばOKな状態になった。早速既存のプレイリストは削除して、ディレクトリで指定するように変更した。どの辺がVLCに関係しているのかいまいち謎だが。内部的にVLCを通して音声ファイルを扱っているのかな。</p>
</blockquote>
<p>ディレクトリだとループ再生とシャッフル再生の機能が利用できないらしい。敗北。</p><hr><p>これをChromeウェブストアに申請した。
<a href="https://github.com/r7kamura/tweetdeck-shortcut-plus">r7kamura/tweetdeck-shortcut-plus: Browser extension to add more keyboard shortcuts to TweetDeck.</a></p><hr><p>申請後にいろいろ不具合が見つかって修正した。一度に複数のバージョンを申請できないので、反応後に次のバージョンを申請しないといけない。</p><hr><p><a href="https://sustainable-rails.com/">Sustainable Web Development with Ruby on Rails</a> を読み始めた。</p>
<p>『Railsで持続可能なウェブ開発を』というような題名。ここで言う持続可能というのは、</p>
<ul>
<li>仕様への要求が増えても</li>
<li>リソースへの要求が増えても</li>
<li>開発者が増えても</li>
</ul>
<p>耐えられるような、という意味だろう。</p><hr><p><img src="https://user-images.githubusercontent.com/111689/169749521-2bbbe4a0-ebdf-43a1-b90d-431cb6e1b57d.png" alt="image"></p>
<p>コードを入れるとほぼ半額 (6500円から3000円ぐらい?) になる。</p><hr><p>作業配信は15:00に終了する、とするのが丁度良いように思った。次回も15:00の終了を狙いたい。</p><hr><p>腹筋ローラー 10回2セット</p>]]></content:encoded></item><item><title><![CDATA[2022-05-22]]></title><description><![CDATA[r7kamura's working log on 2022-05-22]]></description><link>https://r7kamura.github.io/diary/articles/16</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/16</guid><pubDate>Sat, 21 May 2022 20:50:59 GMT</pubDate><content:encoded><![CDATA[<hr><p>actions/setup-nodeの <code>cache: npm</code> ってnode_modulesのキャッシュを作るわけじゃないのか。自分も勘違いしていた。
<a href="https://github.com/actions/setup-node/pull/468">Adjust caching documentation by dmitry-shibanov · Pull Request #468 · actions/setup-node</a></p><hr><p>作業配信する。
<a href="https://www.youtube.com/watch?v=27CmW1_rzAk&#x26;ab_channel=r7kamura">作業 with r7kamura #22 - YouTube</a></p><hr><p>tweetdeck shortcut plusを作り終えたら、転用してtwitter shortcut plusもつくりたい</p><hr><p>昨日から若干風邪気味。喉が若干痛いのと、鼻水が若干出る</p><hr><p><a href="https://r7kamura.github.io/diary/">r7kamura/diary</a>のフッター部分に、RSSとGitHubリポジトリへのリンクを足した。
Feedlyで見てみたらこのRSSに7人の購読者が居た。</p><hr><p>書いた: <a href="https://r7kamura.com/articles/2022-05-21-atomic-habits">Atomic Habitsを読んだ</a></p><hr><p><img src="https://user-images.githubusercontent.com/111689/169671335-28e27122-2427-42be-964f-1aacd3ffe025.png" alt="image"></p>
<p>TweetDeck Shortcut Plusの管理画面をつくっている。</p><hr><p><a href="https://tailwindcss.com/">Tailwind CSS - Rapidly build modern websites without ever leaving your HTML.</a>を学び始めた。</p><hr><p><img src="https://user-images.githubusercontent.com/111689/169674779-686caa4b-6eac-4652-9f3d-2d5234d9525a.png" alt="image"></p><hr><p>本日の俗世:</p>
<ul>
<li>ダミアニャ</li>
<li>大谷翔平</li>
<li>MusicUnity2022</li>
</ul><hr><p>OBSで、VLCソースのときのデフォルトが非表示時に停止だったが、非表示時に一時停止にしないと、上手くいかないことが分かった。</p><hr><p>第20回のスパム判定はその翌日には解除されていて、自分で公開化できるようになったので操作しておいた。何だったのか。</p><hr><p>昨日の配信でtunetankのBGM利用を試した。1日経っても著作権の申し立てが来なかったので、成功だと言える。いいサービスだと思う。ただ、使うサービスは少ない方が良いし万人が真似しやすい手法の方が良いと考えているので、将来的にはYouTube Audio Libraryの適当な音楽を見繕って移行したいところ。見繕うコストがかなり高いので、それが今のYouTube Audio Libraryの問題。</p><hr><p>YouTubeで保存されるアーカイブの最大時間は12時間だと聞いたことがある。では、12時間以上配信した場合に、アーカイブは12時間分残るのか、それとも何も残らないのか。実験してみるにはリスクが高すぎる。</p>
<p><a href="https://youtu.be/TKepOSUGP1E?t=31454">地獄の1500個、梱包する - YouTube</a> (再生時間付きのリンク) という動画にて 、次の発言を聞いた。</p>
<p>「"今日のアーカイブ残る？" ……あのね、12時間以内に一旦終了するっていう作業がしっかり達成できれば残る。万が一、超えちゃったら残んない。視聴者次第。視聴者が僕に伝えられるかどうかってとこ」</p>
<p>ということで、配信時間が12時間を超えたらアーカイブ動画は1秒も残らない、という可能性が高まった。</p>
<p>この機会に色々調べてみると、今は確かにそうらしい。</p>
<ul>
<li><a href="https://support.google.com/youtube/answer/6247592?hl=ja">ライブ配信のアーカイブ - YouTube ヘルプ</a></li>
</ul>
<p>昔は12時間分残っていた時代もあったらしい。今は残らない。これが情報が錯綜していてる原因でもある。</p><hr><p><img src="https://user-images.githubusercontent.com/111689/169685128-ed3b6f48-8315-4664-9f5a-4864cab8fcd4.png" alt="image"></p>
<p>₍₍ (ง ˙ω˙)ว ⁾⁾</p>
<p><img src="https://user-images.githubusercontent.com/111689/169684247-5a2e7efd-41ca-4061-b733-ef986adde2ce.JPG" alt="IMG_6615"></p>
<p>₍₍ (ง ˙؎˙ )ว ⁾⁾</p>
<p><img src="https://user-images.githubusercontent.com/111689/169684245-fc29ae6b-3e76-41d6-9162-49c14b18531c.JPG" alt="IMG_6616"></p>
<p>⁽◝(ˊ꒳ˋ )◜⁾⁾</p>
<p><img src="https://user-images.githubusercontent.com/111689/169684631-1dcfb889-1c37-45e7-96a0-7b3002c4eb5e.JPG" alt="IMG_6619"></p>
<ul>
<li><a href="https://www.youtube.com/watch?v=js6Sqpk-4dg&#x26;ab_channel=%E6%96%99%E7%90%86%E7%A0%94%E7%A9%B6%E5%AE%B6%E3%83%AA%E3%83%A5%E3%82%A6%E3%82%B8%E3%81%AE%E3%83%90%E3%82%BA%E3%83%AC%E3%82%B7%E3%83%94">1皿48円で出来るガチでウマい最強のズボラ飯【虚無ペペロンチーノ】 - YouTube</a></li>
<li><a href="https://github.com/r7kamura/cooking/blob/5dd26d6f93bb9cf1efc94624f67fcfa68d940c17/peperoncino.md">cooking/peperoncino.md at main · r7kamura/cooking</a></li>
</ul><hr><p>manifest v3で、Chrome拡張のアイコンがクリックされたときにオプションページを開くコード。</p>
<pre><code class="language-javascript">// background.js
chrome.action.onClicked.addListener(() => {
  chrome.runtime.openOptionsPage();
});
</code></pre>
<p>Chrome拡張のアイコンがクリックされたときにオプションページを開くコード。</p>
<pre><code class="language-diff">- chrome.browserAction.onClicked.addListener(() => {
+ chrome.action.onClicked.addListener(() => {
</code></pre>
<p>manifest v2時代は <code>browserAction</code> だった。</p><hr><p>腹筋ローラー 10回1セット</p>]]></content:encoded></item><item><title><![CDATA[2022-05-21]]></title><description><![CDATA[r7kamura's working log on 2022-05-21]]></description><link>https://r7kamura.github.io/diary/articles/15</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/15</guid><pubDate>Fri, 20 May 2022 22:23:57 GMT</pubDate><content:encoded><![CDATA[<hr><p>作業配信をする。
<a href="https://www.youtube.com/watch?v=_dUaejy3P7Y&#x26;ab_channel=r7kamura">作業 with r7kamura #21 - YouTube</a></p><hr><p>今日は利用するBGMを tunetank.com に変えるという改善を加えた。勿論有料で契約しているので、YouTubeにアーカイブ動画がSpam判定されないことを願う。</p><hr><p>知らなかったキーボードショートカットも含めてほとんどのものが記載されているっぽいので、一度読み直した。
<a href="https://support.google.com/chrome/answer/157179?hl=ja&#x26;co=GENIE.Platform%3DDesktop">Chrome のキーボード ショートカット - パソコン - Google Chrome ヘルプ</a></p><hr><p>コア機能は大体できた。ショートカット管理画面をつくる必要があって大変そう。
<a href="https://github.com/r7kamura/tweetdeck-shortcut-plus">r7kamura/tweetdeck-shortcut-plus: Browser extension to add more keyboard shortcuts on TweetDeck.</a></p><hr><p>デスクトップPCのOS利用割合 Win 75%, Mac 15%
<a href="https://gs.statcounter.com/os-market-share/desktop/worldwide">Desktop Operating System Market Share Worldwide | Statcounter Global Stats</a></p><hr><p>GitHubがMarkdownの引用に新しい記法を追加しようとしているという話:
<a href="https://github.com/github/feedback/discussions/16925">[Markdown] An option to highlight a "Note" and "Warning" using blockquote (Beta) · Discussion #16925 · github/feedback</a></p><hr><p>Atomic Habitsを読み終えた。平凡な時間管理の話が紹介されるのかと思いきや、あらゆる観点について真面目に考えているという本で、印象が良かった。また、普段は人が説明してくれないような生活のあらゆることについて説明してくれて、そうそう、そういう話が知りたかったんだよね、と思いところが何度もあった。その話はいい話だからあと100mぐらい深掘りしてほしいのにな～と思うことが多かった。</p>
<p>Kindle版も購入してAudible版と併用しようとしたものの、結局はKindle版で1時間、Audibleで9時間ぐらいの割合で読んだので、Kindle版は必要なかった。等速で聞いていたものの、1.25倍ぐらいで聞いても良かったかも。</p>
<p>冒頭の「はじめに」の事故のエピソード以外はほぼ全部読んで良かった内容だった。冒頭の事故のエピソードは本当に最悪で、怖い事故が紹介されてただ怖いだけなので無い方がいい。そこから奇跡的に回復して上手くいった話として構成されているが、この最初の部分だけは本当に読まなくて良い。かなりいい本なのに、普通の人は冒頭から読むはずなので、ここで読者を失うのは勿体ない。いい本だが、この冒頭のせいで他人にも勧めづらい。言うほどか？という話ではあるのだけど、それ以外の良さのせいでこの部分の悪さが浮き彫りになっている。</p><hr><p>TweetDeckでやりたいこと全部キーボードでできるのすごい。腕がもう1本生えたような感覚。</p>]]></content:encoded></item><item><title><![CDATA[2022-05-20]]></title><description><![CDATA[r7kamura's working log on 2022-05-20]]></description><link>https://r7kamura.github.io/diary/articles/14</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/14</guid><pubDate>Thu, 19 May 2022 19:33:45 GMT</pubDate><content:encoded><![CDATA[<p>.</p><hr><p><a href="https://chrome.google.com/webstore/detail/copy-markdown-link/gkceaaphhbeanfciglgpffnncfpipjpa">Copy Markdown Link.</a>がChromeウェブストアで公開された。</p><hr><p>Copy Markdown Linkを紹介する旨の記事を一応書いた。よくあるものなので大したことは無いものの、一応。</p><hr><p><a href="https://github.com/antfu/vitesse-webext">https://github.com/antfu/vitesse-webext</a> というブラウザ拡張向けテンプレートリポジトリを試してみて、確かに動いたが、色々入りまくっててよく分からん (ちゃんと読んでないだけ) という気持ちになったので、やはり自前で小さいテンプレートリポジトリを持つか……という気持ちを新たにした。しかしまあ優れてそうなところは沢山あって、</p>
<ul>
<li>ESLint対応</li>
<li>他ブラウザ対応</li>
<li>content-script対応</li>
<li>その他よく知らないけど色々やってくれるはず</li>
</ul>
<p>という違いはありそう。</p><hr><p>ブログ記事を書いてからすぐ配信するのではなく定時バッチ (日本時間午前4時) でのビルドにのみ頼るようにした結果、なんというか気持ちに余裕が出てきたような気がしなくもない。がすぐ公開された方がアドだろみたいな気持ちもあり、これは判断が難しいところ。すぐ公開されて反応を気にしすぎてしまうというデメリット、手軽に文章を書いて雑に投稿できるというメリットをどう評価するかという話。</p><hr><p>書いた: <a href="https://r7kamura.com/articles/2022-05-20-copy-markdown-link">Copy Markdown Link</a></p><hr><p>書いた: <a href="https://r7kamura.com/articles/2022-05-20-image-caption">画像のキャプション復活</a></p><hr><p>結局、</p>
<pre><code>gh workflow run import --repo r7kamura/r7kamura.com
</code></pre>
<p>とか叩いて更新を試みてしまっていて、全く意味がない。</p><hr><p><a href="https://www.youtube.com/watch?v=IXwOcXgY3WM&#x26;ab_channel=r7kamura">作業 with r7kamura #20 - YouTube</a></p><hr><p><a href="https://github.com/r7kamura/diary/issues/14">#14</a> だけIssue作成時にIssueイベントが発行されておらず、Issueのデータが同期されていなかった。発行されないこともあるのだな</p><hr><p>馬がメールを自動返信してくれるサービス、良すぎる
<a href="https://www.youtube.com/watch?v=kbfD_lX1Tog&#x26;ab_channel=InspiredbyIceland">OutHorse Your Email to Iceland’s Horses - YouTube</a></p>
<p><img src="https://user-images.githubusercontent.com/111689/169418733-4e277647-641b-478c-aa67-69f4c4117ea1.png" alt="image"></p><hr><p>Rails 6.1 (7.0かも?) から、使い方次第ではpeform_enqueued_jobsを使っているコードを書き換えないといけなくなった。</p>
<pre><code class="language-ruby"># NG (Rails 6.1未満ではOK)
expect {
  perform_enqueued_jobs { subject }
}.to raise_error(X)

# OK
perform_enqueued_jobs {
  expect { subject }.to raise_error(X)
}
</code></pre>
<ul>
<li><a href="https://github.com/rails/rails/issues/41290">perform_enqueued_jobs does not return the type of error raised in the job · Issue #41290 · rails/rails</a></li>
</ul><hr><p>VSCodeのdevcontainerの機能を使ってみることにした。</p>
<p>Node.jsのイメージを使うようにDockerfileを置く。コマンドパレットでReopen container的なやつを実行すると、.devcontainer/devcontainer.json が自動生成された。この状態でVSCodeでターミナルを開くと、そのDockerfileで開かれるようになった。node:18には偶然Gitもインストールされていたので助かった。</p>
<p>しかし普段使っている環境とはdotfilesも異なるしなんだか居心地が悪い。そう思って調べていたら、VSCodeの設定でお前のdotfilesのリポジトリのURLを入力すれば勝手にインストールしてやるよという機能が存在することが分かった。ただ、これを使うにはリポジトリのルートに install.sh みたいなファイルが無いといけないということで、雑にそれをこしらえた。</p>
<p><a href="https://github.com/r7kamura/dotfiles">https://github.com/r7kamura/dotfiles</a></p>
<p>install.shの内容はこれだけ</p>
<pre><code class="language-bash">#!/bin/bash
set -euo pipefail

ln -fs ~/dotfiles/.bashrc ~/.bashrc
</code></pre>
<p>URLを設定後、そのままでは特に何も反映されなかったが、VSCodeのworkspaceを一度開き直すことで無事設定が反映され、いつものような環境で開発できるようになった。</p>
<p><img src="https://user-images.githubusercontent.com/111689/169434352-587f4ea9-680b-4e78-bd4c-799348f95710.png" alt="image"></p><hr><p>devcontainerからgit pushしようとするとプロセスから音沙汰がなくなりworkspaceを閉じるしかなくなる、という問題に遭遇したので一時撤退することにした。</p><hr><p>つくりはじめた: <a href="https://github.com/r7kamura/tweetdeck-shortcut-plus">r7kamura/tweetdeck-shortcut-plus: Browser extension to add more keyboard shortcuts on TweetDeck.</a></p><hr><p>今日の俗世:</p>
<ul>
<li>デス鮭ハンター</li>
<li>4630万円誤送金 男 逮捕</li>
<li>首相 痛恨ミス 正解は5階</li>
</ul><hr><p>腹筋ローラーが届いたので、膝ついて10回だけやった。</p><hr><p>朝から鼻水が出るし喉も痛かったので、少し風邪気味かもしれない。最近銭湯によく行っていたせいか？</p><hr><p>YouTubeからあなたの投稿した動画はスパムであると警告がきて直近の動画が非公開化された。調べてみると、この件に関しては再審査する余地もなく、またサポートも受けられないらしい。何が原因かが分からないが、90日以内にあと2回警告を受けるとチャンネルが停止されるという記載があったので (スパムの場合は1回で停止だという説明も見かけたが、今回停止されていないことから、どうやら常にそうではないらしい)、何が原因か確かめるために実験できる機会は残り2度だけらしい。この実験に2度失敗するとチャンネルが停止される。</p>
<p>問題の原因について、著作権フリーの楽曲を再生していることだと推測している。これに賭けて、次回は配信中に楽曲を再生しないことを試して、その後その動画が非公開化されないかどうかをもって、成否を確かめることにしようか考えている。</p><hr><p><a href="https://zenn.dev/takahashim/articles/ab48aaedab1e68">『Sustainable Web Development with Ruby on Rails』はRails使ってるなら絶対面白いと思う</a> が面白そうだった。</p><hr><p>以前からYouTubeの配信で使うための音楽を有料で使わせてくれるサービスが無いか探していて、 <a href="https://tunetank.com/">https://tunetank.com/</a> が良さそうだったので使ってみることにした。</p>]]></content:encoded></item><item><title><![CDATA[2022-05-19]]></title><description><![CDATA[r7kamura's working log on 2022-05-19]]></description><link>https://r7kamura.github.io/diary/articles/13</link><guid isPermaLink="true">https://r7kamura.github.io/diary/articles/13</guid><pubDate>Wed, 18 May 2022 19:28:17 GMT</pubDate><content:encoded><![CDATA[<hr><p>書いた。報告的で、情報量はあまり無い
"<a href="https://r7kamura.com/articles/2022-05-18-amazon-url-shortener-update">Amazon URL Shortenerの改善</a>" <a href="https://r7kamura.com/articles/2022-05-18-amazon-url-shortener-update">https://r7kamura.com/articles/2022-05-18-amazon-url-shortener-update</a></p><hr><p>作業配信する。
<a href="https://www.youtube.com/watch?v=Svr4JEjy5MQ&#x26;ab_channel=r7kamura">作業 with r7kamura #19 - YouTube</a></p><hr><p>これのウェブストアへの申請をやる。
<a href="https://github.com/r7kamura/copy-markdown-link">r7kamura/copy-markdown-link: Browser extension to copy link in Markdown format.</a></p><hr><p>ウェブストアへ申請した。</p><hr><p>"AppBrew Rails Guides" という文書を書いている。</p><hr><p>見た。
<a href="https://www.youtube.com/watch?v=T5diZPGOLhk&#x26;ab_channel=%E3%83%9D%E3%82%B1%E3%83%A2%E3%83%B3%E5%85%AC%E5%BC%8FYouTube%E3%83%81%E3%83%A3%E3%83%B3%E3%83%8D%E3%83%AB">【公式】オリジナルアニメ「雪ほどきし二藍」第一話 青き踏む |『Pokémon LEGENDS アルセウス』 - YouTube</a></p><hr><p>毎月「久しぶりに釘宮理恵の声聴いた」と言っている気がする</p><hr><p>TweetDeckに追加したいショートカットキー</p>
<ul>
<li>選択中の投稿に含まれている画像を大きなサイズで表示する
<ul>
<li>前後の画像に移動する</li>
<li>連続投稿の漫画である場合を考慮して、次の投稿があればその画像にそのまま遷移できると便利そう</li>
</ul>
</li>
<li>その投稿をリツイートしたユーザーのカラムを新しく開く</li>
<li>そのカラムを閉じる</li>
<li>その投稿が引用している投稿を開く</li>
<li>その投稿に含まれている最初のURLを開く</li>
<li>その投稿をtwitter.comで開く</li>
<li>その投稿のlikesを開く</li>
<li>その投稿のretweetsを開く</li>
</ul><hr><p>選択中の投稿には <code>is-selected-tweet</code> というクラス名が付くようだから、これを見てどうにかするJavaScriptを実行する拡張をつくれば良さそうではある。</p><hr><p>Chrome拡張の雛形を提供する手段として、例えば次の方法が考えられる</p>
<ul>
<li><code>npm init foo</code> できるような <code>create-foo</code> NPM packageをつくる</li>
<li><code>foo-starter-kit</code> のようなテンプレートリポジトリをつくる</li>
</ul>
<p>テンプレートリポジトリの優位性は、NPMを動かす実行環境が無くても雛形を用意できること。Dockerfileとかを提供すれば、Node.jsを直接インストールさせることなく利用してもらえる。動的なコンテンツも、自己書き換えを行うGitHub Actionという飛び道具を使えば実現できないこともないが、何かを入力してもらうということはできない。</p>
<p>NPM packageの優位性は、動的にコンテンツを入力する能力があることで、例えばcreate-viteだとTypeScriptを使うかどうか、Reactを使うかどうかなどが選択できるし、packageのdescriptionやnameを入力してもらったりできる。downsideとして、やはりNode.jsを入れてもらわないといけないということがある。</p><hr><p>今日の俗世:</p>
<ul>
<li>三角関数 金融</li>
<li>ゆっくり茶番劇 商標登録取消</li>
<li>4630万円誤送金</li>
</ul><hr><p>Google Docsで代替テキスト (Ctrl + Shift + Y) から「題名」を付けることで、画像のtitle属性が付けられることが分かり、これでブログに表示する画像にキャプションを付けたりできるのだけど、一方でGoogle Docs側で編集しているときにその画像に代替テキストが割り当てられているかどうかという情報が一切分からない。代替テキストの利用には編集上の問題がある。</p><hr><p>Atomic Habits、後半のほうに (20章ぐらい?)、理論上すべての物事に対して楽しんで取り組める可能性があるが、人より楽しめるものを選択した方が、人から褒められたり感謝されたりしてより楽しみやすく、継続もしやすい、という基本的なことが書かれていて良かった。</p>
<p>それから、探索と試行 (試行という語彙だったかは曖昧) をどういう割合でやると良いかという基本的な事柄にも触れられていて良かった。上手くいっている状況では試行を重視し、上手くいっていない状況では探索を重視する、というのが基本原則。また上手くいっている状態でも10-20%程度は探索に回せ的な話もあった。ちなみに、Googleの20%ルールという卑近で分かりやすい例が紹介されていた。</p><hr><p>AppBrew Rails Guidesは、AppBrew Rails Best Practicesにリネームして、かつ汎用性を持たせて一般公開できる形に留めることにした。これだとAppBrew固有の話ができなくなるが、そもそもAppBrew固有の話をすべきではないというか、一般的にそれはNG (だから例えばAppBrewのXが良くてYが悪いことは明らかだよね) という風に暗に伝える方が効果的であると考えたため。</p>
<p>形式としては、X Best Practicesは1 sectionあたり1 title, 1~2 sentences + NG example + OK exampleの形式を取ることが多そうだったので、その形式を取ることにした。</p><hr><p>WindowsのChromeで、Alt+Shift+Tで更新ボタンのところにフォーカスでき、またそこからTabで移動すると拡張のあたりのアイコンにキーボードでフォーカスできるということを知った。</p>]]></content:encoded></item></channel></rss>